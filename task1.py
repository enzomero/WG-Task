# -*- coding: utf-8 -*-
import copy

'''
Имеется предустановленный набор данных в виде вложенных словарей. Пример:
data = {
    'a' : {
        'a1' : 1,
        'a2' : 2,
    },
    'b' : {
        'b1' : {
            'b11' : 1,
            'b12' : 2,
            },
    }
}
Вложенность словарей может быть произвольной. Требуется предложить программное решение на языке
Python для получения разницы между начальным и конечным состояниями данных. Пример:
data['a']['a1'] = 3
data['b']['b1']['b11'] = 5
Результат представляет из себя компиляцию изменений:
res = {
'a' : {'a1' : 3},
'b' : {'b1' : {'b11' : 5}}
}
Программа должна быть покрыта юнит-тестами.
'''

data_x = {'a': {'a1': 1, 'a2': 2}, 'b': {'b1': {'b12': 2, 'b11': 12}}}

def find(p_data, p_data_x, res):
    for i in d:
        if (d[i] != d_x[i]):
            if (type(d[i]) != type(10)) :
                find(d[i], d_x[i], res[i])
        else:
            res.pop(i)
    return;

def getChanges(d, de):
    result = copy.deepcopy(de)
    find(d, de, result)
    return result;
    
print(getChanges(data, data_x))
